{"version":3,"sources":["img/logo-ai.svg","img/logo-react.svg","img/heart.svg","NavBar.tsx","DemoPageA.tsx","DemoPageB.tsx","DemoPageC.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Link","to","Component","DemoPageA","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","message","trackException","bind","assertThisInitialized","trackTrace","trackEvent","throwError","ajaxRequest","ReactAI","rootInstance","error","Error","severityLevel","setState","name","xhr","XMLHttpRequest","open","send","react","onClick","role","React","withAITracking","DemoPageB","DemoPageC","NavBar_App","Route","path","component","PageA","exact","PageB","PageC","src","logoReact","alt","logoAI","heart","href","target","rel","Boolean","window","location","hostname","match","dotenv","config","history","createBrowserHistory","basename","process","initialize","instrumentationKey","maxBatchInterval","debug","ReactDOM","render","Router","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b937c01a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-ai.1e2d2217.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-react.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.4e01da79.svg\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class App extends Component {\r\n  public render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" to={'/demo-a'} >Page A</Link>\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" to={'/demo-b'} >Page B</Link>\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" to={'/demo-c'} >Page C</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { withAITracking } from 'react-appinsights';\r\nimport { ReactAI } from 'react-appinsights';\r\n\r\ninterface State {\r\n  message: string;\r\n}\r\n\r\nclass DemoPageA extends React.Component<any, State> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    // Set the state directly. Use props if necessary.\r\n    this.state = {\r\n      message: \"\",\r\n    }\r\n\r\n    this.trackException = this.trackException.bind(this);\r\n    this.trackTrace = this.trackTrace.bind(this);\r\n    this.trackEvent = this.trackEvent.bind(this);\r\n    this.throwError = this.throwError.bind(this);\r\n    this.ajaxRequest = this.ajaxRequest.bind(this);\r\n  }\r\n\r\n  trackException() {\r\n    ReactAI.rootInstance.trackException({ error: new Error('some error'), severityLevel: 3 });\r\n    this.setState({ message: \"Exception explicitly tracked\" });\r\n  }\r\n\r\n  trackTrace() {\r\n    ReactAI.rootInstance.trackTrace({ message: 'some trace', severityLevel: 1 });\r\n    this.setState({ message: \"Trace explicitly tracked\" });\r\n  }\r\n\r\n  trackEvent() {\r\n    ReactAI.rootInstance.trackEvent({ name: 'some event' });\r\n    this.setState({ message: \"Event explicitly tracked\" });\r\n  }\r\n\r\n  throwError() {\r\n    this.setState({ message: \"Error thrown and automatically collected\" });\r\n    // This will crash the app; the error will show up in the Azure Portal\r\n    throw new Error(\"Error Foo Bar\");\r\n  }\r\n\r\n  ajaxRequest() {\r\n    let xhr = new XMLHttpRequest();\r\n    xhr.open('GET', 'https://httpbin.org/status/200');\r\n    xhr.send();\r\n    this.setState({ message: \"Ajax request performed and automatically collected\" });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"main-text\">Demo Page A</div>\r\n        <button type=\"button\" className=\"btn btn-outline-warning btn-lg\" onClick={this.trackException} >Track Exception</button>\r\n        <button type=\"button\" className=\"btn btn-outline-primary btn-lg\" onClick={this.trackEvent} >Track Event</button>\r\n        <button type=\"button\" className=\"btn btn-outline-info btn-lg\" onClick={this.trackTrace} >Track Trace</button><br />\r\n        <button type=\"button\" className=\"btn btn-outline-light btn-lg\" onClick={this.ajaxRequest} >Autocollect a Request</button>\r\n        <button type=\"button\" className=\"btn btn-outline-danger btn-lg\" onClick={this.throwError} >Autocollect an Error</button>\r\n        <br />...or navigate to another page to trigger component-based page tracking.\r\n        {this.state.message !== \"\" &&\r\n          <div className=\"alert alert-primary\" role=\"alert\">\r\n            {this.state.message}\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAITracking(DemoPageA);\r\n","import React, { Component } from 'react';\r\nimport { withAITracking } from 'react-appinsights';\r\n\r\nclass DemoPageB extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"main-text\">Demo Page B</div>\r\n        <p><small>(This page is just intended to demo the page view tracking feature of <code>react-appinsights</code>)</small></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAITracking(DemoPageB);\r\n","import React, { Component } from 'react';\r\nimport { withAITracking } from 'react-appinsights';\r\n\r\nclass DemoPageC extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"main-text\">Demo Page C</div>\r\n        <p><small>(This page is just intended to demo the page view tracking feature of <code>react-appinsights</code>)</small></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAITracking(DemoPageC);\r\n","import React, { Component } from 'react';\nimport NavBar from './NavBar'\nimport logoAI from './img/logo-ai.svg';\nimport logoReact from './img/logo-react.svg';\nimport heart from './img/heart.svg';\nimport './App.css';\n\nimport { Route } from 'react-router-dom';\nimport PageA from './DemoPageA';\nimport PageB from './DemoPageB';\nimport PageC from './DemoPageC';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar />\n        <div className=\"main\">\n          <div className=\"page-content\">\n            <Route path='/' component={PageA} exact={true} />\n            <Route path='/demo-a' component={PageA} />\n            <Route path='/demo-b' component={PageB} />\n            <Route path='/demo-c' component={PageC} />\n          </div>\n\n          <div className=\"bottom-link main-text\">\n            <div className=\"logos\">\n              <img src={logoReact} className=\"logo\" alt=\"React\" />\n              +\n              <img src={logoAI} className=\"logo\" alt=\"Application Insights\" />\n              =\n              <img src={heart} id=\"heart\" className=\"logo\" alt=\"love\" />\n            </div>\n\n            <span className=\"bottom-text\">This is a demo application of Application Insights and React, using </span>\n            <a className=\"react-ai-link\"\n              href=\"https://github.com/Azure/react-appinsights#react-appinsights\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              react-appinsights\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Router  } from 'react-router-dom';\nimport { ReactAI } from 'react-appinsights';\nimport { createBrowserHistory } from \"history\"\n\nimport dotenv from 'dotenv';\ndotenv.config();\n\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\nconst IK = process.env.REACT_APP_APPINSIGHTS_KEY === undefined? \"XXX\" : process.env.REACT_APP_APPINSIGHTS_KEY;\nReactAI.initialize({\n    instrumentationKey: IK,\n    maxBatchInterval: 0,\n    history: history,\n    debug: true\n});\n\nReactDOM.render(<Router  history={history} >\n    <App />\n</Router >, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}